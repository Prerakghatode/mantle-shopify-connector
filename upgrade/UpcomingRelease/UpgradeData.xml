<?xml version="1.0" encoding="UTF-8"?>
<entity-facade-xml type="ext-upgrade">
    <!-- Shopify Bulk Operation Query to fetch product updates -->
    <moqui.resource.DbResource filename="BulkProductAndVariantsByIdQuery.ftl" isFile="Y" resourceId="BulkProductAndVariantsByIdQuery" parentResourceId="GraphQL">
        <file mimeType="text/html" versionName="01" rootVersionName="01">
            <fileData>
                <![CDATA[<#ftl output_format="HTML">
                <@compress single_line=true>
                    <#if queryParams?has_content>
                        <#if queryParams.namespace?has_content>
                            <#assign namespace = queryParams.namespace/>
                        </#if>
                        <#if queryParams.filterQuery?has_content>
                            <#assign filterQuery = queryParams.filterQuery/>
                        <#else>
                            <#if queryParams.filterCondition?has_content>
                                <#assign filterCondition = queryParams.filterCondition/>
                            <#else>
                                <#assign filterCondition = "">
                            </#if>
                            <#if queryParams.fromDateLabel?has_content>
                                <#assign fromDateLabel = queryParams.fromDateLabel/>
                            <#else>
                                <#assign fromDateLabel = "updated_at"/>
                            </#if>
                            <#if queryParams.thruDateLabel?has_content>
                                <#assign thruDateLabel = queryParams.thruDateLabel/>
                            <#else>
                                <#assign thruDateLabel = "updated_at"/>
                            </#if>
                            <#-- Build date filters -->
                            <#assign dateFilters = "">
                            <#if queryParams.fromDate?has_content>
                                <#assign dateFilters = dateFilters + "${fromDateLabel}:>'${queryParams.fromDate}'"/>
                            </#if>
                            <#if queryParams.thruDate?has_content>
                                <#if dateFilters?has_content>
                                    <#assign dateFilters = dateFilters + " AND "/>
                                </#if>
                                <#assign dateFilters = dateFilters + "${thruDateLabel}:<'${queryParams.thruDate}'"/>
                            </#if>

                            <#-- Combine filterCondition and dateFilters -->
                            <#if filterCondition?has_content && dateFilters?has_content>
                                <#assign filterQuery = "${filterCondition} AND ${dateFilters}"/>
                            <#elseif filterCondition?has_content>
                                <#assign filterQuery = filterCondition/>
                            <#elseif dateFilters?has_content>
                                <#assign filterQuery = dateFilters/>
                            <#else>
                                <#assign filterQuery = "">
                            </#if>
                        </#if>
                    </#if>
                    mutation {
                        bulkOperationRunQuery(
                            query: """ {
                                products <#if filterQuery?has_content>(query:"${filterQuery}")</#if> {
                                    edges {
                                        node {
                                            id
                                            handle
                                            title
                                            isGiftCard
                                            productType
                                            vendor
                                            category {
                                                id
                                                name
                                                fullName
                                            }
                                            hasVariantsThatRequiresComponents
                                            featuredMedia {
                                                mediaContentType
                                                preview {
                                                    image {
                                                        url
                                                    }
                                                }
                                            }
                                            options {
                                                id
                                                name
                                                position
                                                optionValues {
                                                    id
                                                    name
                                                }
                                            }
                                            tags
                                            variants{
                                                edges{
                                                    node{
                                                        id
                                                        title
                                                        sku
                                                        barcode
                                                        product {
                                                            id
                                                            handle
                                                            title
                                                            isGiftCard
                                                            productType
                                                            vendor
                                                        }
                                                        price
                                                        compareAtPrice
                                                        position
                                                        requiresComponents
                                                        image {
                                                            url
                                                        }
                                                        selectedOptions {
                                                            name
                                                            value
                                                        }
                                                        inventoryItem {
                                                            id
                                                            requiresShipping
                                                            measurement {
                                                                weight {
                                                                    unit
                                                                    value
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            metafields <#if namespace?has_content>(namespace:"${namespace}")</#if> {
                                                edges{
                                                    node{
                                                        id
                                                        key
                                                        namespace
                                                        value
                                                        type
                                                        reference {
                                                            ... on Metaobject {
                                                                id
                                                                handle
                                                                type
                                                                fields {
                                                                    key
                                                                    value
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        """ ) {
                            bulkOperation {
                                id
                                status
                            }
                            userErrors {
                                field
                                message
                            }
                        }
                    }
                </@compress>]]>
            </fileData>
            <histories versionName="01" previousVersionName="01"/>
        </file>
    </moqui.resource.DbResource>
</entity-facade-xml>
